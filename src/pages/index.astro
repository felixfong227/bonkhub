---
import Layout from '../layouts/Layout.astro';
import type { ResponseType } from './api/videos.json';
import { GET } from './api/videos.json';
import { Image, getImage } from 'astro:assets';
import type { Video, Item } from 'ytsr';
import SadDoggoPNG from '../assets/images/sad_doggo.png';
let response = await GET(Astro);
const resJSON: ResponseType = await response.json();

function isYouTubeVideo(arg: Item): arg is Video {
  return arg.type !== 'short' && arg.type === 'video';
}

function filterOnlyForVideos(arg: Item[] | Item) {
  if (!Array.isArray(arg)) {
    return isYouTubeVideo(arg) ? [arg] : [];
  }
  return arg.filter((item) => item !== undefined && isYouTubeVideo(item)) as Video[];
}
---

<Layout title="BonkHub">
  <>
    <div class="container mx-auto">
      {
        !resJSON.data ? (
          <>
            <div class="alert alert-error flex flex-col justify-center">
              <Image
                alt={'Sad doggo, cuz no doggo bonking'}
                src={SadDoggoPNG}
                width={100}
                height={100}
              />
              <span>Ohhhh noooooooooo!!! FAILED TO FIND DOGOOOOO!!!!!!!!!</span>
            </div>
          </>
        ) : null
      }

      <div class="grid grid-cols-4 gap-4">
        {
          resJSON ? (
            <>
              {filterOnlyForVideos(resJSON.data).map(async (videoItem) => {
                const image = videoItem.bestThumbnail?.url ?? SadDoggoPNG;
                const remoteImage = await getImage({
                  src: image,
                  width: 200,
                  height: 100,
                });
                return (
                  <>
                    <div class="card w-96 bg-base-100 shadow-xl">
                      <figure>
                        <Image
                          src={remoteImage.src}
                          alt={`${videoItem.id} thumbnail`}
                          width={200}
                          height={100}
                          class="w-full max-h-53 object-cover"
                        />
                      </figure>
                      <div class="card-body">
                        <h2 class="card-title">{videoItem.title}</h2>
                      </div>
                    </div>
                  </>
                );
              })}
            </>
          ) : null
        }
      </div>
    </div>
  </>
</Layout>
